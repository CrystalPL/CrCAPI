plugins {
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id 'maven-publish'
}

allprojects {
    group = 'pl.crystalek'
    version = '1.6.1'

    apply plugin: 'java-library'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()

        maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/groups/public/" }
    }

    dependencies {
        shadow('org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT')
    }

    shadowJar {
        relocate 'net.kyori', 'pl.crystalek.crcapi.lib.adventure'
        relocate 'net.kyori.examination', 'pl.crystalek.crcapi.lib.examination'

        relocate 'com.mongodb', 'pl.crystalek.crcapi.lib.mongodb'
        relocate 'com.zaxxer.hikari', 'pl.crystalek.crcapi.lib.hikari'
        relocate 'com.mysql', 'pl.crystalek.crcapi.lib.mysql'
        relocate 'org.bson', 'pl.crystalek.crcapi.lib.bson'
        relocate 'org.slf4j', 'pl.crystalek.crcapi.lib.slf4j'
        relocate 'com.google.protobuf', 'pl.crystalek.crcapi.lib.protobuf'
        relocate 'google.protobuf', 'pl.crystalek.crcapi.lib.protobuf'

        archiveClassifier.set(null)
    }
}

subprojects {
    publishing {
        publications {
            maven(MavenPublication) {
                from components.java

                if (it.getArtifactId().equals('api')) {
                    it.setArtifactId('message-api')
                }

                pom.withXml {
                    def repositories = asNode().appendNode('repositories')

                    project.getRepositories().findAll { repo ->
                        if (repo.getUrl().toString().startsWith('http')) {
                            def repository = repositories.appendNode('repository')
                            repository.appendNode('id', repo.getDisplayName())
                            repository.appendNode('url', repo.getUrl().toString())
                        }
                    }
                }
            }
        }

        repositories {
            maven { url "https://repo.titanvale.net/crc/" }
        }
    }

    java {
        withSourcesJar()
    }

    dependencies {
        shadow('org.projectlombok:lombok:1.18.22')
        annotationProcessor('org.projectlombok:lombok:1.18.22')
    }
}

dependencies {
    implementation project(":database")
    implementation project(":command")
    implementation project(":core")
    implementation project(":gui")
    implementation project(":message:impl")
}

shadowJar {
    archiveFileName = "${archiveBaseName.get()} v${archiveVersion.get()}.${archiveExtension.get()}"
    destinationDirectory.set(new File(rootProject.rootDir, "api"))
}